@use 'px' as *;
@use 'true' as *;

@function square($x) {
    @return $x * $x;
}

@function aboveTen($x) {
    @return ($x > 10);
}

@include test-module('utils.collections') {
    @include test('map-get-default') {
        @include assert-equal(
            map-get-default(
                (
                    a: 1,
                    b: 2,
                ),
                a,
                3
            ),
            1
        );
    }
    @include test('map-deep-get') {
        @include assert-equal(
            map-deep-get(
                (
                    a: 1,
                    b: 2,
                ),
                b
            ),
            2
        );
    }
    @include test('nth-if-length') {
        @include assert-equal(nth-if-length((a, b, c), 1), a);
    }
    @include test('nth-or-val') {
        @include assert-equal(nth-or-val((a, b, c), 1, d), a);
    }
    @include test('list-remove') {
        @include assert-equal(list-remove((a, b, c), 1), (b, c));
    }

    @include test('list-replace') {
        @include assert-equal(
            list-replace(
                (a, 1, c, d, e),
                (
                    e: 7,
                )
            ),
            (a 1 c d 7)
        );
    }
    @include test('list-contains') {
        @include assert-equal(list-contains((a, b, c), c), true);
    }
    @include test('list-sort-num') {
        @include assert-equal(list-sort-num((2, 4, 1, 5, 3)), (1 2 3 4 5));
    }
    @include test('map-sort-by-values') {
        @include assert-equal(
            map-sort-by-values(
                (
                    a: 1,
                    b: 2,
                    d: 4,
                    c: 3,
                )
            ),
            ((a: 1, b: 2, c: 3, d: 4))
        );
    }
    @include test('list-map') {
        @include assert-equal(list-map((1 2 3 4), get-function(square)), 1 4 9 16);
    }

    @include test('list-filter') {
        @include assert-equal(list-filter(2 20 30 3 4 100, get-function(aboveTen)), (20 30 100));
    }

    @include test('map-collect') {
        @include assert-equal(
            map-collect(
                (
                    a: 1,
                ),
                (
                    b: 2,
                ),
                (
                    c: 3,
                )
            ),
            (
                a: 1,
                b: 2,
                c: 3,
            )
        );
    }
}
