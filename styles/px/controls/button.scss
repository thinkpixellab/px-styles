@use '../utils/all.scss' as *;
@use '../site/all.scss' as *;
@use './base.scss' as *;
@use './helpers.scss' as *;

@mixin button-base($overrides) {
    // ----------------------------------------------------------------------------
    // config

    $local: flatten-maps-merge(
        get('controls:base'),
        get('controls:button'),
        (
            display: inline-flex
        ),
        $overrides
    );

    // ----------------------------------------------------------------------------
    // base

    @include control-base($local);

    // ----------------------------------------------------------------------------
    // local variables / list of overrides

    $height: map-get-path($local, 'height', 2.25em);
    $min-width: map-get-path($local, 'min-width', 6em);
    $padding: map-get-path($local, 'padding', 0 1em);
    $cursor: map-get-path($local, 'cursor', pointer);
    $line-height: map-get-path($local, 'line-height', 1.25);
    $white-space: map-get-path($local, 'white-space', nowrap);

    // ----------------------------------------------------------------------------
    // style

    height: $height;
    min-width: $min-width;
    padding: $padding;
    cursor: $cursor;
    line-height: $line-height;

    // text does not wrap by default, use a span for text that should wrap
    white-space: $white-space;
    @if ($white-space == 'nowrap') {
        span {
            margin: 0;
            padding: 0;
        }
    }

    // disable text selection
    @include no-select();

    // transition common properties
    @include transition((background color border box-shadow));
}

@mixin button($overrides: ()) {
    // ----------------------------------------------------------------------------
    // config

    $local: flatten-maps-merge(get('controls:base'), get('controls:button'), $overrides);

    // ----------------------------------------------------------------------------
    // base

    @include button-base($local);

    // ----------------------------------------------------------------------------
    // local variables / list of overrides

    $accent: map-get-path($local, 'accent');
    $fg: map-get-path($local, 'fg', contrast-color($accent));
    $focus-style: map-get-path($local, 'focus-style', shadow);
    $border: map-get-path($local, 'border', none);
    $shadow: map-get-path($local, 'shadow', none);

    $hover-accent: shade-if-number(map-get-path($local, 'hover:accent', 1), $accent);
    $hover-fg: map-get-path($local, 'hover:fg', null);
    $hover-border: map-get-path($local, 'hover:border', null);
    $hover-shadow: map-get-path($local, 'hover:shadow', null);

    $active-accent: shade-if-number(map-get-path($local, 'active:accent', -1), $accent);
    $active-fg: map-get-path($local, 'active:fg', null);
    $active-border: map-get-path($local, 'active:border', null);
    $active-shadow: map-get-path($local, 'active:shadow', null);

    $disabled-accent: shade-if-number(
        map-get-path($local, 'disabled:accent', mix(gray(), $accent)),
        $accent
    );
    $disabled-fg: map-get-path($local, 'disabled:fg', null);
    $disabled-border: map-get-path($local, 'disabled:border', null);
    $disabled-shadow: map-get-path($local, 'disabled:shadow', null);

    // ----------------------------------------------------------------------------
    // style

    background-color: $accent;
    color: $fg;
    border: $border;
    box-shadow: $shadow;

    &:hover {
        background-color: $hover-accent;
        color: $hover-fg;
        border: $hover-border;
        box-shadow: $hover-shadow;
    }

    &:active {
        background-color: $active-accent;
        color: $active-fg;
        border: $active-border;
        box-shadow: $active-shadow;
    }

    &:disabled {
        background-color: $disabled-accent;
        color: $disabled-fg;
        border: $disabled-border;
        box-shadow: $disabled-shadow;
    }

    @if ($focus-style == 'shadow') {
        @include focus {
            @include control-focus-shadow(rgba($accent, 0.5));
        }
    }
}

@mixin button-outline($overrides: ()) {
    // ----------------------------------------------------------------------------
    // config

    $local: flatten-maps-merge(get('controls:base'), get('controls:button'), $overrides);

    // ----------------------------------------------------------------------------
    // base

    @include button-base($local);

    // ----------------------------------------------------------------------------
    // local variables / list of overrides

    $accent: map-get-path($local, 'accent');
    $border-style: map-get-path($local, 'border-style', solid);
    $border-width: map-get-path($local, 'border-width', 2px);
    $bg: map-get-path($local, 'bg', rgba($accent, 0));
    $fg: map-get-path($local, 'fg', $accent);

    $hover-accent: shade-if-number(map-get-path($local, 'hover:accent', 0), $accent);
    $hover-bg: map-get-path($local, 'hover:bg', rgba($hover-accent, 0.05));

    $active-accent: shade-if-number(map-get-path($local, 'active:accent', -2), $accent);
    $active-bg: map-get-path($local, 'active:bg', rgba($active-accent, 0.15));

    $disabled-accent: shade-if-number(map-get-path($local, 'disabled:accent', gray(-2)), $accent);
    $disabled-bg: map-get-path($local, 'active:bg', rgba($disabled-accent, 0.15));

    $focus-style: map-get-path($local, 'focus-style', shadow);

    // ----------------------------------------------------------------------------
    // style

    border-color: $accent;
    border-style: $border-style;
    border-width: $border-width;
    background-color: $bg;
    color: $fg;

    &:hover {
        color: $hover-accent;
        border-color: $hover-accent;
        background-color: $hover-bg;
    }

    &:active {
        color: $active-accent;
        border-color: $active-accent;
        background-color: $active-bg;
    }

    &:disabled {
        color: $disabled-accent;
        border-color: $disabled-accent;
        background-color: $disabled-bg;
    }

    @if ($focus-style == 'shadow') {
        @include focus {
            @include control-focus-shadow(rgba($accent, 0.33));
        }
    }
}

@mixin button-text($overrides: ()) {
    // ----------------------------------------------------------------------------
    // config

    $local: flatten-maps-merge(
        get('controls:base'),
        get('controls:button'),
        (
            min-width: 0,
            padding: 0 0.5em
        ),
        $overrides
    );

    // ----------------------------------------------------------------------------
    // base

    @include button-base($local);

    // ----------------------------------------------------------------------------
    // local variables / list of overrides

    $accent: map-get-path($local, 'accent');
    $hover-accent: shade-if-number(map-get-path($local, 'hover:accent', -3), $accent);
    $active-accent: shade-if-number(map-get-path($local, 'active:accent', -3), $accent);
    $disabled-accent: shade-if-number(map-get-path($local, 'disabled:accent', gray(-3)), $accent);
    $focus-style: map-get-path($local, 'focus-style', shadow);

    // ----------------------------------------------------------------------------
    // style

    color: $accent;
    @include transition((color transform), $dur: 50ms);

    &:hover {
        color: $hover-accent;
    }
    &:active {
        color: $active-accent;
        transform: translate3d(0, 1px, 0);
    }
    &:disabled {
        color: $disabled-accent;
    }

    @if ($focus-style == 'shadow') {
        @include focus() {
            @include control-focus-shadow(rgba($accent, 0.33));
        }
    }
}
