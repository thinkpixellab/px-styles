// ----------------------------------------------------------------------------
// Controls

@use '../utils/all.scss' as *;
@use '../site/all.scss' as *;

$-global-override-scope: null;

@mixin -set-override-scope($override) {
    $-global-override-scope: $override !global;
    @content;
    $-global-override-scope: null !global;
}

@function -override($override-key, $value) {
    @if ($-global-override-scope == null) {
        @error 'The override function can only be used within the scope of the the override-scope mixin.';
    }
    @return map-get-default($-global-override-scope, $override-key, $value);
}

@function -override-shade($override-key, $value, $shade-base) {
    $result: -override($override-key, $value);
    @return if(is-number($result), shade($shade-base, $result), $result);
}

// base (shared by most input types)

@mixin control-base($overrides) {
    @include -set-override-scope($overrides) {
        appearance: none;
        box-sizing: border-box;

        font-family: -override(font-family, get('controls:font-family'));
        font-size: -override(font-size, get('controls:font-size'));
        font-weight: -override(font-weight, get('controls:font-weight'));

        border: -override(outline, none);
        border: -override(border, none);
        border-radius: -override(radius, get('controls:radius'));

        display: -override(display, flex);
        align-items: -override(align-items, center);
        justify-content: -override(justify-content, center);

        &:disabled {
            cursor: not-allowed;
        }
    }
}

// // focus styles

// @mixin control-focus-outline() {
//     outline: 1px dashed primary();
//     outline-offset: 2px;
// }

// @mixin control-focus-shadow() {
//     @include transition-props(box-shadow);
//     box-shadow: 0px 0px 0px 2px primary();
// }

// // error equivalent of focus shadow
// @mixin control-error-shadow() {
//     @include transition-props(box-shadow);
//     box-shadow: 0px 0px 0px 2px $danger;
// }

// buttons

@mixin button-base($overrides) {
    @include control-base($overrides);

    @include -set-override-scope($overrides) {
        display: -override(display, inline-flex);
        height: -override(height, get(('controls:button:height' 'controls:height')));
        min-width: -override('min-width', get('controls:button:min-width'));
        padding: -override('padding', get('controls:button:padding'));
        cursor: -override(cursor, get(('controls:button:cursor')));

        // text does not wrap by default, use a span for text that should wrap
        $wrap: -override(whitespace, nowrap);
        white-space: $wrap;
        @if ($wrap == 'nowrap') {
            span {
                margin: 0;
                padding: 0;
            }
        }

        // disable text selection
        @include no-select();

        // transition common properties
        @include transition((background color border box-shadow));
    }
}

///
/// @param {*} $overrides [()] Supported overrides:
/// - `bg` (+ hover-, active-, disabled- variants) - background-color (if a
///   number is provided for hover-bg, active-bg, disabled-bg then they will be
///   interpreted as a shade of bg)
/// - `fg` (+ hover-, active-, disabled- variants)
/// - `shadow` (+ hover-, active-, disabled- variants)

@mixin button($overrides: ()) {
    @include button-base($overrides);

    @include -set-override-scope($overrides) {
        $accent: -override('accent', get('controls:button:bg' 'controls:accent'));
        $fg: -override('fg', get('controls:button:fg', contrast-color($accent)));
        $disabled-bg: -override('disabled:bg', get('controls:button:disabled:bg'));
        $disabled-bg: if($disabled-bg, $disabled-bg, mix($accent, gray()));

        background-color: $accent;
        color: $fg;
        box-shadow: -override('shadow', get('controls:button:shadow'));

        &:hover {
            background-color: -override-shade('hover:bg', get('controls:button:hover:bg'), $accent);
            color: -override('hover:fg', get('controls:button:hover:fg'));
            box-shadow: -override('hover-shadow', get('controls:button:hover:shadow'));
        }

        &:active {
            background-color: -override-shade('active:bg', get('controls:button:active:bg'), $accent);
            color: -override('active:fg', get('controls:button:active:fg'));
            box-shadow: -override('active:shadow', get('controls:button:active:shadow'));
        }

        &:disabled {
            background-color: $disabled-bg;
            color: -override('disabled:fg', get('controls:button:disabled:fg'));
            box-shadow: -override('disabled:shadow', get('controls:button:disabled:shadow'));
        }
    }
}

@mixin button-outline($overrides: ()) {
    @include button-base($overrides);

    @include -set-override-scope($overrides) {
        $accent: -override('accent', get('controls:button:bg' 'controls:accent'));
        $hover-accent: -override-shade('hover-accent', 0, $accent);
        $active-accent: -override-shade('active-accent', -2, $accent);
        $disabled-accent: -override-shade('disabled-accent', gray(-2), $accent);
        //$disabled-accent: -override('base-color', get('controls:button:bg' 'controls:accent'));

        border-color: $accent;
        border-style: -override('border-style', solid);
        border-width: -override('border-width', 2px);

        background-color: -override('bg', transparent);
        color: -override('fg', $accent);

        &:hover {
            color: $hover-accent;
            border-color: $hover-accent;
            background-color: -override(hover-bg, rgba($hover-accent, 0.05));
        }

        &:active {
            color: $active-accent;
            border-color: $active-accent;
            background-color: -override(hover-bg, rgba($active-accent, 0.15));
        }

        &:disabled {
            color: $disabled-accent;
            border-color: $disabled-accent;
            background-color: -override(disabled-bg, rgba($disabled-accent, 0.15));
            // background-color: $disabled-bg;
            // color: -override('disabled:fg', get('controls:button:disabled:fg'));
        }
    }
}

@mixin button-text($overrides: ()) {
    @include button-base($overrides);

    @include -set-override-scope($overrides) {
        $accent: -override('accent', get('controls:button:bg' 'controls:accent'));
        $hover-accent: -override-shade('hover-accent', 0, $accent);
        $active-accent: -override-shade('active-accent', -2, $accent);
        $disabled-accent: -override-shade('disabled-accent', gray(-2), $accent);
        //$disabled-accent: -override('base-color', get('controls:button:bg' 'controls:accent'));

        border-color: $accent;
        border-style: -override('border-style', solid);
        border-width: -override('border-width', 2px);

        background-color: -override('bg', transparent);
        color: -override('fg', $accent);

        &:hover {
            color: $hover-accent;
            border-color: $hover-accent;
            background-color: -override(hover-bg, rgba($hover-accent, 0.05));
        }

        &:active {
            color: $active-accent;
            border-color: $active-accent;
            background-color: -override(hover-bg, rgba($active-accent, 0.15));
        }

        &:disabled {
            color: $disabled-accent;
            border-color: $disabled-accent;
            background-color: -override(disabled-bg, rgba($disabled-accent, 0.15));
            // background-color: $disabled-bg;
            // color: -override('disabled:fg', get('controls:button:disabled:fg'));
        }
    }
}

// // Textbox

// @mixin textbox(
//     $height: $control-textbox-height,
//     $padding: $control-textbox-padding,
//     $bg: $control-textbox-bg,
//     $fg: $control-textbox-fg,
//     $fg-readonly: $control-textbox-readonly-fg,
//     $placeholder-fg: $control-textbox-placeholder-fg,
//     $radius: $control-all-radius,
//     $ff: $control-all-ff,
//     $fs: $control-all-fs,
//     $fw: $control-all-fw
// ) {
//     @include control-base($radius, $ff, $fs, $fw);

//     height: $height;
//     line-height: $height;
//     padding: 0 $padding;
//     background-color: $bg;
//     color: $fg;
//     &::placeholder {
//         color: $placeholder-fg;
//         opacity: 1;
//     }
//     @include focus {
//         @include control-focus-shadow();
//     }
// }

// // Select (dropdown)

// @mixin dropdown-base($padding, $arrow-width) {
//     // @include control-base($control-all-radius, $control-all-ff, $control-all-fs, $control-all-fw);

//     cursor: pointer;
//     padding: 0 (2.25 * $padding) 0 $padding;
//     background-repeat: no-repeat;
//     background-position: right $padding top 50%;
//     background-size: $arrow-width auto;
// }

// @mixin dropdown(
//     $height: $control-textbox-height,
//     $padding: $control-textbox-padding,
//     $bg: $control-textbox-bg,
//     $fg: $control-select-textbox-fg,
//     $radius: $control-all-radius,
//     $ff: $control-all-ff,
//     $fs: $control-all-fs,
//     $fw: $control-all-fw,
//     $arrow-width: $control-select-arrow-width,
//     $arrow-svg: $control-select-arrow-svg,
//     $hover-fg: $control-select-textbox-hover-fg
// ) {
//     @include textbox(
//         $height: $height,
//         $padding: $padding,
//         $bg: $bg,
//         $fg: $fg,
//         $radius: $radius,
//         $ff: $ff,
//         $fs: $fs,
//         $fw: $fw
//     );
//     @include dropdown-base($padding, $arrow-width);
//     background-image: inline-svg(
//         $arrow-svg,
//         (
//             '#fillcolor': $fg
//         )
//     );
//     &:hover {
//         color: $hover-fg;
//         background-image: inline-svg(
//             $arrow-svg,
//             (
//                 '#fillcolor': $hover-fg
//             )
//         );
//     }
// }

// @mixin dropdown-button() {
//     // @include button();
//     // @extend .button;
//     // @include dropdown-base($control-textbox-padding, $control-select-arrow-svg);
//     // color: $control-select-button-fg;
//     // line-height: $control-button-height;
//     // background-image: inline-svg(
//     //     $control-select-arrow-svg,
//     //     (
//     //         '#fillcolor': $control-select-button-fg
//     //     )
//     // );
//     // &:hover {
//     //     color: $control-select-button-hover-fg;
//     //     background-image: inline-svg(
//     //         $control-select-arrow-svg,
//     //         (
//     //             '#fillcolor': $control-select-button-hover-fg
//     //         )
//     //     );
//     // }
//     // &:active {
//     //     color: $control-select-button-active-fg;
//     //     background-image: inline-svg(
//     //         $control-select-arrow-svg,
//     //         (
//     //             '#fillcolor': $control-select-button-active-fg
//     //         )
//     //     );
//     // }
// }

// @mixin toggle-base(
//     $ff: $control-all-ff,
//     $fs: $control-all-fs,
//     $fw: $control-all-fw,
//     $height: $control-all-height,
//     $disabled-color: $control-all-disabled-color
// ) {
//     // Required markup:
//     // <div class="outeclass">
//     //     <input type="checkbox || radio" />
//     //     <label>Is checked?</label>
//     // </div>

//     @include control-base($control-all-radius, $ff, $fs, $fw);

//     // better display default (since they tend to get inlined with each other)
//     display: inline-flex;
//     min-height: $height;
//     cursor: pointer;

//     // hide checkable inputs
//     input[type='radio'],
//     input[type='checkbox'] {
//         position: absolute;
//         appearance: none;
//         opacity: 0;
//     }

//     label {
//         // assuming that this is the label from here out
//         user-select: none;
//         display: inline-flex;
//         position: relative;
//         align-items: center;
//         position: relative;
//         font-size: inherit;
//         cursor: inherit;

//         &:before,
//         &:after {
//             position: absolute;
//             content: '';
//             display: block;
//             top: 50%;
//             transform: translateY(-50%);
//             left: 0;
//             background-size: contain;
//             background-repeat: no-repeat;
//         }

//         &:before {
//             background-color: transparent;
//         }

//         &:after {
//             opacity: 0;
//         }
//     }
//     input[type='radio']:checked + label,
//     input[type='checkbox']:checked + label,
//     input[type='checkbox']:indeterminate + label {
//         &:after {
//             opacity: 1;
//         }
//     }

//     input[type='radio']:disabled + label,
//     input[type='checkbox']:disabled + label {
//         cursor: not-allowed;
//         &:before {
//             opacity: 0.33;
//         }
//         color: $disabled-color;
//     }

//     // &:not(.checkbox--no-label):not(.radio--no-label) {
//     //     input[type='radio'],
//     //     input[type='checkbox'] {
//     //         @include focus() {
//     //             + label {
//     //                 @include control-focus-outline();
//     //             }
//     //         }
//     //     }
//     // }

//     // &.checkbox--no-label,
//     // &.radio--no-label {
//     //     input[type='radio'],
//     //     input[type='checkbox'] {
//     //         @include focus() {
//     //             + label:before {
//     //                 //border-color: red;
//     //                 @include control-focus-outline();
//     //             }
//     //         }
//     //     }
//     // }
// }

// @mixin check-base(
//     $ff: $control-all-ff,
//     $fs: $control-all-fs,
//     $fw: $control-all-fw,
//     $height: $control-all-height,
//     $disabled-color: $control-all-disabled-color,
//     $lh: $control-checkbox-lh,
//     $check-size: $control-checkbox-size,
//     $check-padding: $control-checkbox-padding,
//     $check-top-offset: $control-checkbox-top-offset,
//     $check-outer-border: $control-checkbox-outer-border,
//     $check-outer-bg: $control-checkbox-outer-bg,
//     $check-outer-radius: $control-checkbox-outer-radius,
//     $check-inner-svg: $control-checkbox-inner-svg,
//     $check-inner-fill: $control-checkbox-inner-bg,
//     $check-indeterminate-svg: $control-checkbox-inner-svg-indeterminate,
//     $check-indeterminate-fill: $control-checkbox-inner-bg-indeterminate,
//     $supports-indeterminate: false
// ) {
//     @include toggle-base($ff, $fs, $fw, $height, $disabled-color);

//     line-height: $lh;
//     label {
//         padding-left: $check-size + $check-padding;
//         line-height: $lh;
//         &:before,
//         &:after {
//             margin-top: $check-top-offset;
//             width: $check-size;
//             height: $check-size;
//         }
//         &:before {
//             border: $check-outer-border;
//             background-color: $check-outer-bg;
//             border-radius: $check-outer-radius;
//         }
//         &:after {
//             background-image: inline-svg(
//                 $check-inner-svg,
//                 (
//                     '#fillcolor': $check-inner-fill
//                 )
//             );
//         }
//     }
//     @if ($supports-indeterminate) {
//         input[type='checkbox']:indeterminate + label:after {
//             background-image: inline-svg(
//                 $check-indeterminate-svg,
//                 (
//                     '#fillcolor': $check-indeterminate-fill
//                 )
//             );
//         }
//     }
// }

// @mixin checkbox(
//     $ff: $control-all-ff,
//     $fs: $control-all-fs,
//     $fw: $control-all-fw,
//     $height: $control-all-height,
//     $disabled-color: $control-all-disabled-color,
//     $lh: $control-checkbox-lh,
//     $check-size: $control-checkbox-size,
//     $check-padding: $control-checkbox-padding,
//     $check-top-offset: $control-checkbox-top-offset,
//     $check-outer-border: $control-checkbox-outer-border,
//     $check-outer-bg: $control-checkbox-outer-bg,
//     $check-outer-radius: $control-checkbox-outer-radius,
//     $check-inner-svg: $control-checkbox-inner-svg,
//     $check-inner-fill: $control-checkbox-inner-bg,
//     $check-indeterminate-svg: $control-checkbox-inner-svg-indeterminate,
//     $check-indeterminate-fill: $control-checkbox-inner-bg-indeterminate,
//     $supports-indeterminate: true
// ) {
//     @include check-base(
//         $ff: $ff,
//         $fs: $fs,
//         $fw: $fw,
//         $height: $height,
//         $disabled-color: $disabled-color,
//         $lh: $lh,
//         $check-size: $check-size,
//         $check-padding: $check-padding,
//         $check-top-offset: $check-top-offset,
//         $check-outer-border: $check-outer-border,
//         $check-outer-bg: $check-outer-bg,
//         $check-outer-radius: $check-outer-radius,
//         $check-inner-svg: $check-inner-svg,
//         $check-inner-fill: $check-inner-fill,
//         $check-indeterminate-svg: $check-indeterminate-svg,
//         $check-indeterminate-fill: $check-indeterminate-fill,
//         $supports-indeterminate: true
//     );
// }

// @mixin radiobutton(
//     $ff: $control-all-ff,
//     $fs: $control-all-fs,
//     $fw: $control-all-fw,
//     $height: $control-all-height,
//     $disabled-color: $control-all-disabled-color,
//     $lh: $control-radio-lh,
//     $check-size: $control-radio-size,
//     $check-padding: $control-radio-padding,
//     $check-top-offset: $control-radio-top-offset,
//     $check-outer-border: $control-radio-outer-border,
//     $check-outer-bg: $control-radio-outer-bg,
//     $check-outer-radius: $control-radio-outer-radius,
//     $check-inner-svg: $control-radio-inner-svg,
//     $check-inner-fill: $control-radio-inner-bg
// ) {
//     @include check-base(
//         $ff: $ff,
//         $fs: $fs,
//         $fw: $fw,
//         $height: $height,
//         $disabled-color: $disabled-color,
//         $lh: $lh,
//         $check-size: $check-size,
//         $check-padding: $check-padding,
//         $check-top-offset: $check-top-offset,
//         $check-outer-border: $check-outer-border,
//         $check-outer-bg: $check-outer-bg,
//         $check-outer-radius: $check-outer-radius,
//         $check-inner-svg: $check-inner-svg,
//         $check-inner-fill: $check-inner-fill,
//         $supports-indeterminate: false
//     );
// }

// // creates a toggle switch component
// @mixin toggle(
//     $ff: $control-all-ff,
//     $fs: $control-all-fs,
//     $fw: $control-all-fw,
//     $height: $control-all-height,
//     $disabled-color: $control-all-disabled-color,
//     $toggle-height: $control-toggle-height,
//     $toggle-thumb-size: $control-toggle-thumb-size,
//     $toggle-lh: $control-toggle-lh,
//     $toggle-width: $control-toggle-width,
//     $toggle-padding: $control-toggle-padding,
//     $toggle-top-offset: $control-toggle-top-offset,
//     $toggle-off-bg: $control-toggle-off-bg,
//     $toggle-off-thumb-bg: $control-toggle-off-thumb-bg,
//     $toggle-off-thumb-shadow: $control-toggle-off-thumb-shadow,
//     $toggle-on-bg: $control-toggle-on-bg,
//     $toggle-on-thumb-bg: $control-toggle-on-thumb-bg,
//     $toggle-on-thumb-shadow: $control-toggle-on-thumb-shadow,
//     $toggle-off-hover-bg: $control-toggle-off-hover-bg
// ) {
//     @include toggle-base($ff, $fs, $fw, $height, $disabled-color);

//     $thumb-margin: ($toggle-height - $toggle-thumb-size) / 2;
//     line-height: $toggle-lh;
//     label {
//         padding-left: $toggle-width + $toggle-padding;
//         line-height: $toggle-lh;
//         min-height: $toggle-height;
//         &:before {
//             margin-top: $toggle-top-offset;
//             width: $toggle-width;
//             height: $toggle-height;
//             border-radius: $toggle-height / 2;
//             background-color: $toggle-off-bg;
//             @include transition-props((background-color), $dur: 200ms, $ease: $ease-in-out-quart);
//         }
//         &:after {
//             opacity: 1;
//             margin-top: $toggle-top-offset;
//             top: 50%;
//             transform: translateY(-50%);
//             left: $thumb-margin;
//             width: $toggle-thumb-size;
//             height: $toggle-thumb-size;
//             border-radius: 50%;
//             background-color: $toggle-off-thumb-bg;
//             box-shadow: $toggle-off-thumb-shadow;
//             @include transition-props((background-color, box-shadow, left), $dur: 200ms, $ease: $ease-in-out-quart);
//         }
//     }
//     input[type='checkbox']:checked + label {
//         &:before {
//             background-color: $toggle-on-bg;
//         }
//         &:after {
//             left: ($toggle-width - ($toggle-thumb-size + $thumb-margin));
//             background-color: $toggle-on-thumb-bg;
//             box-shadow: $toggle-on-thumb-shadow;
//         }
//     }
//     &:hover {
//         label:before {
//             background-color: $toggle-off-hover-bg;
//         }
//     }
// }

// // checkbox button (applied to checkbox or radio, looks like a button)

// @mixin checkbox-button(
//     $radius: $control-all-radius,
//     $ff: $control-all-ff,
//     $fs: $control-all-fs,
//     $fw: $control-all-fw,
//     $height: $control-button-height,
//     $lh: $control-button-lh,
//     $cursor: $control-button-cursor,
//     $state-fades: $app-state-fades,
//     $min-width: $control-button-min-width,
//     $padding: $control-button-padding,
//     $bg: $control-checkbox-button-bg,
//     $fg: $control-checkbox-button-fg,
//     $shadow: $control-button-shadow,
//     $hover-bg: $control-checkbox-button-hover-bg,
//     $hover-fg: $control-checkbox-button-hover-fg,
//     $hover-shadow: $control-button-hover-shadow,
//     $active-bg: $control-checkbox-button-active-bg,
//     $active-fg: $control-checkbox-button-active-fg,
//     $active-shadow: $control-button-active-shadow,
//     $focus-bg: $control-button-active-bg,
//     $disabled-bg: mix($control-button-bg, $gray-400, 30%),
//     $disabled-fg: mix($control-button-fg, $gray-300),
//     $checked-bg: $control-checkbox-button-checked-bg,
//     $checked-fg: white
// ) {
//     // hide checkable inputs
//     input[type='radio'],
//     input[type='checkbox'] {
//         position: absolute;
//         appearance: none;
//         opacity: 0;

//         + label {
//             @include button(
//                 $radius: $radius,
//                 $ff: $ff,
//                 $fs: $fs,
//                 $fw: $fw,
//                 $height: $height,
//                 $lh: $lh,
//                 $cursor: $cursor,
//                 $state-fades: $state-fades,
//                 $min-width: $min-width,
//                 $padding: $padding,
//                 $bg: $bg,
//                 $fg: $fg,
//                 $shadow: $shadow,
//                 $hover-bg: $hover-bg,
//                 $hover-fg: $hover-fg,
//                 $hover-shadow: $hover-shadow,
//                 $active-bg: $active-bg,
//                 $active-fg: $active-fg,
//                 $active-shadow: $active-shadow,
//                 $focus-bg: $focus-bg,
//                 $disabled-bg: $disabled-bg,
//                 $disabled-fg: $disabled-fg
//             );
//         }

//         &:checked {
//             + label {
//                 background-color: $checked-bg;
//                 color: $checked-fg;
//             }
//         }
//     }
// }

// // only include once per project

// @mixin scrollbar(
//     $width: $control-scrollbar-width,
//     $bg: $control-scrollbar-bg,
//     $thumb-bg: $control-scrollbar-thumb-bg,
//     $thumb-radius: $control-scrollbar-thumb-radius,
//     $thumb-width: $control-scrollbar-thumb-width
// ) {
//     html {
//         --scrollbarBG: $bg;
//         --thumbBG: $thumb-bg;
//     }
//     body::-webkit-scrollbar {
//         width: $width;
//     }
//     body {
//         scrollbar-width: thin;
//         scrollbar-color: $thumb-bg $bg;
//     }
//     body::-webkit-scrollbar-track {
//         background: $bg;
//     }
//     body::-webkit-scrollbar-thumb {
//         background-color: $thumb-bg;
//         border-radius: $thumb-radius;
//         border: (($width - $thumb-width) / 2) solid $bg;
//     }
// }

// // ----------------------------------------------------------------------
// // Controls
// // ----------------------------------------------------------------------

// // internal helpers

// @mixin control-grid(
//     $padding: $control-grid-padding,
//     $spacing: $control-grid-spacing,
//     $radius: $control-all-radius,
//     $bg: $control-grid-bg
// ) {
//     flex-direction: column;
//     padding: ($padding - $spacing / 2) $padding;
//     justify-content: stretch;
//     background-color: $bg;
//     border-radius: $radius;
//     > * {
//         &:not(:first-child) {
//             margin-top: $spacing;
//         }
//         &:not(:last-child) {
//             margin-bottom: $spacing;
//         }
//     }
// }

// // control-row

// @mixin control-row($max-width: $control-row-max-width, $spacing: $control-grid-spacing) {
//     display: flex;
//     flex-direction: row;
//     justify-content: stretch;
//     max-width: $max-width;
//     @if ($spacing) {
//         > * {
//             margin-right: $spacing;
//             &:last-child {
//                 margin-right: 0;
//             }
//         }
//     }
// }

@mixin never-call-this() {
    $control-grid-padding: sp(2) !default;
    $control-grid-spacing: sp(2) !default;
    $control-grid-bg: null !default;
    $control-row-max-width: 600px !default;
    $control-row-label-fs: rems(16px) !default;
    $control-row-label-fw: 700 !default;
    $control-row-desc-fs: fs(14px) !default;

    // base (shared when relevant for all inputs)

    $control-all-radius: 2px !default;
    $control-all-ff: sans-serif !default;
    $control-all-fs: 15px !default;
    $control-all-fw: normal !default;
    $control-all-height: sp(3) !default;
    $control-accent: primary() !default;
    $control-accent-hover: darken(primary(), 10%) !default;
    $control-all-required-color: primary() !default;
    $control-all-error-color: $danger !default;
    $control-all-success-color: $success !default;
    $control-all-disabled-color: $gray-500;
    $control-all-disabled-bg: $gray-500;

    // md variant

    $control-md-height: sp(3.5) !default;
    $control-md-fs: fs(md) !default;

    // sm variant
    $control-sm-height: sp(2.75) !default;
    $control-sm-fs: fs(sm) !default;
    $control-sm-fw: 400 !default;

    // popup

    $control-popup-bg: $white !default;
    $control-popup-radius: 4px !default;
    $control-popup-shadow: shadow(8) !default;

    // modal (dialog)

    $control-modal-blur: 2px !default;
    $control-modal-overlay-bg: rgba($gray-600, 0.6) !default;
    $control-dialog-bg: $gray-200 !default;
    $control-dialog-radius: 4px !default;
    $control-dialog-shadow: shadow(8) !default;
    $control-dialog-padding: sp(2);
    $control-dialog-title-bg: $gray-800 !default;
    $control-dialog-title-fg: $white !default;
    $control-dialog-title-padding: sp(1, 2);
    $control-dialog-min-width: rems(360px);
    $control-dialog-min-height: rems(240px);
    $control-dialog-fade-dur: 0ms;

    // button

    $control-button-height: $control-all-height !default;
    $control-button-min-width: sp(9) !default;
    $control-button-padding: 0 sp(1.5) !default;
    $control-button-lh: 1 !default;
    $control-button-cursor: pointer !default;
    $control-button-bg: $control-accent !default;
    $control-button-fg: contrast-color($control-accent) !default;
    $control-button-shadow: null !default;
    $control-button-hover-bg: $control-accent-hover !default;
    $control-button-hover-fg: contrast-color($control-accent-hover) !default;
    $control-button-hover-shadow: null !default;
    $control-button-active-bg: $control-accent-hover !default;
    $control-button-active-fg: contrast-color($control-accent) !default;
    $control-button-active-shadow: null !default;
    $control-button-disabled-bg: $gray-300;
    $control-button-disabled-fg: $gray-600;

    // textbox

    $control-textbox-height: $control-all-height !default;
    $control-textbox-padding: 0.75em !default;
    $control-textbox-bg: white !default;
    $control-textbox-fg: $app-fg !default;
    $control-textbox-readonly-fg: rgba($app-fg, 0.65) !default;
    $control-textbox-placeholder-fg: $app-fg-subtle !default;
    $control-textbox-border: 1px solid $gray-500 !default;

    // select

    $control-select-arrow-svg: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 9 5"><path fill="#fillcolor" fill-rule="evenodd" d="M8.25.83L4.87 4.6a.5.5 0 01-.74 0L.75.83A.5.5 0 011.12 0h6.76a.5.5 0 01.37.83z"/></svg>' !default;
    $control-select-arrow-width: 9px !default;
    $control-select-arrow-height: 5px !default;
    $control-select-textbox-fg: $control-textbox-fg !default;
    $control-select-textbox-hover-fg: $control-textbox-fg !default;
    $control-select-button-fg: $control-button-fg !default;
    $control-select-button-hover-fg: $control-button-hover-fg !default;
    $control-select-button-active-fg: $control-button-active-fg !default;

    // radio

    $control-radio-inner-svg: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18"><circle cx="9" cy="9" r="4" fill="#fillcolor" fill-rule="evenodd"/></svg>' !default;
    $control-radio-inner-bg: primary() !default;
    $control-radio-outer-bg: $white !default;
    $control-radio-outer-border: 2px solid $gray-500 !default;
    $control-radio-outer-radius: 50%;
    $control-radio-fg: $app-fg !default;
    $control-radio-size: 1.2em !default;
    $control-radio-padding: 0.3em !default;
    $control-radio-top-offset: 0 !default;
    $control-radio-lh: 1.2 !default;

    // checkbox

    $control-checkbox-inner-svg: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="#fillcolor" d="M12.05 3L6.61 8.46 3.95 5.79 2 7.75l4.61 4.63L14 4.96z"/></svg>' !default;
    $control-checkbox-inner-svg-indeterminate: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="#fillcolor" d="M3 7h10v2H3z" fill-rule="evenodd"/></svg>' !default;
    $control-checkbox-inner-bg: primary() !default;
    $control-checkbox-inner-bg-indeterminate: primary() !default;
    $control-checkbox-outer-bg: $white !default;
    $control-checkbox-outer-border: 2px solid $gray-500 !default;
    $control-checkbox-outer-radius: 2px;
    $control-checkbox-fg: $app-fg !default;
    $control-checkbox-size: 1.2em !default;
    $control-checkbox-padding: 0.3em !default;
    $control-checkbox-top-offset: 0 !default;
    $control-checkbox-lh: 1.2 !default;

    // toggle (switch)

    $control-toggle-width: rems(54px) !default;
    $control-toggle-height: rems(24px) !default;
    $control-toggle-thumb-size: rems(16px) !default;
    $control-toggle-on-bg: $green !default;
    $control-toggle-on-hover-bg: primary() !default;
    $control-toggle-on-thumb-bg: $white !default;
    $control-toggle-on-thumb-shadow: shadow(4) !default;
    $control-toggle-off-bg: $gray-500 !default;
    $control-toggle-off-thumb-bg: $gray-100 !default;
    $control-toggle-off-thumb-shadow: shadow(4) !default;
    $control-toggle-padding: rems(12px) !default;
    $control-toggle-top-offset: 0 !default;
    $control-toggle-lh: 1.2 !default;

    // toggle (button)

    $control-checkbox-button-bg: $gray-600;
    $control-checkbox-button-fg: white;
    $control-checkbox-button-checked-bg: primary();
    $control-checkbox-button-checked-fg: white;
    $control-checkbox-button-checked-svg: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 9 8"><path d="M0 4.901l1.14-1.507 2.38 1.921L7.54 0 9 1.178 3.84 8z" fill="#000" fill-rule="evenodd"/></svg>';
    $control-checkbox-button-active-bg: $control-accent-hover;
    $control-checkbox-button-active-fg: white;
    $control-checkbox-button-hover-bg: $gray-800;
    $control-checkbox-button-hover-fg: white;

    // tables

    $controls-table-bg: $white !default;
    $controls-table-radius: 3px !default;
    $controls-table-shadow: shadow(4) !default;
    $controls-table-cellpadding: sp(0.5, 1) !default;
    $controls-table-row-border: 1px solid $gray-200 !default;
    $controls-table-row-bg-even: null !default;
    $controls-table-row-bg-odd: null !default;
    $controls-table-row-height: sp(4) !default;
    $controls-table-header-height: sp(4) !default;
    $controls-table-header-bg: $gray-800 !default;
    $controls-table-header-fg: $white !default;

    // scrollbar
    $control-scrollbar-width: 11px !default;
    $control-scrollbar-bg: transparent !default;
    $control-scrollbar-thumb-bg: rgba(black, 0);
    $control-scrollbar-thumb-radius: 5.5px;
    $control-scrollbar-thumb-width: 6px;
}
