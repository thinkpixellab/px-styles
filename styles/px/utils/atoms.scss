////
/// @group utils.atoms
////

/// Generate flex-box atoms.
///
/// @param {*} $prefix [''] A prefix that can be applied to each of the classes
/// generated by the mixin.

@mixin atoms-flex($prefix: '') {
    // Display

    .#{$prefix}flex {
        display: flex;
    }

    .#{$prefix}inline-flex {
        display: inline-flex;
    }

    // Direction

    .#{$prefix}flex-row {
        display: flex;
        flex-direction: row;
    }
    .#{$prefix}flex-row-reverse {
        display: flex;
        flex-direction: row-reverse;
    }
    .#{$prefix}flex-column {
        display: flex;
        flex-direction: column;
    }
    .#{$prefix}flex-column-reverse {
        display: flex;
        flex-direction: column-reverse;
    }

    // Wrapping

    .#{$prefix}flex-wrap {
        flex-wrap: wrap;
        flex-direction: row;
    }
    .#{$prefix}flex-wrap-column {
        flex-wrap: wrap;
        flex-direction: column;
    }
    .#{$prefix}flex-wrap-reverse {
        flex-wrap: wrap-reverse;
    }
    .#{$prefix}flex-nowrap {
        flex-wrap: nowrap;
    }

    // Grow / Shrink

    .#{$prefix}flex-auto {
        flex: 1 1 auto;
    }

    .#{$prefix}flex-none {
        flex: none;
    }

    // Generate flex-basis classes (disabled because never used)
    // @for $b from 0 to 10 {
    //     .#{$prefix}flex-basisc-#{($b * 10)} {
    //         flex-basis: $b * 10%;
    //     }
    // }

    @for $f from 0 to 4 {
        .#{$prefix}flex-grow-#{$f} {
            flex-grow: $f;
        }
        .#{$prefix}flex-shrink-#{$f} {
            flex-shrink: $f;
        }
    }

    @for $g from 0 to 4 {
        @for $s from 0 to 4 {
            .#{$prefix}flex-#{$g}-#{$s} {
                flex-grow: $g;
                flex-shrink: $s;
            }
            // Generate flex-basis classes (disabled because never used)
            // @for $b from 0 to 10 {
            //     .#{$prefix}flex-#{$g}-#{$s}-#{($b * 10)} {
            //         flex-grow: $g;
            //         flex-shrink: $s;
            //         flex-basis: $b * 10%;
            //     }
            // }
        }
    }

    // Align items

    .#{$prefix}items-start {
        align-items: flex-start;
    }

    .#{$prefix}items-end {
        align-items: flex-end;
    }

    .#{$prefix}items-center {
        align-items: center;
    }

    .#{$prefix}items-baseline {
        align-items: baseline;
    }

    .#{$prefix}items-stretch {
        align-items: stretch;
    }

    // Align self

    .#{$prefix}self-start {
        align-self: flex-start;
    }

    .#{$prefix}self-end {
        align-self: flex-end;
    }

    .#{$prefix}self-center {
        align-self: center;
    }

    .#{$prefix}self-baseline {
        align-self: baseline;
    }

    .#{$prefix}self-stretch {
        align-self: stretch;
    }

    // Justify items

    .#{$prefix}justify-start {
        justify-content: flex-start;
    }

    .#{$prefix}justify-end {
        justify-content: flex-end;
    }

    .#{$prefix}justify-center {
        justify-content: center;
    }

    .#{$prefix}justify-between {
        justify-content: space-between;
    }

    .#{$prefix}justify-around {
        justify-content: space-around;
    }

    // Align content

    .#{$prefix}content-start {
        align-content: flex-start;
    }

    .#{$prefix}content-end {
        align-content: flex-end;
    }

    .#{$prefix}content-center {
        align-content: center;
    }

    .#{$prefix}content-between {
        align-content: space-between;
    }

    .#{$prefix}content-around {
        align-content: space-around;
    }

    .#{$prefix}content-stretch {
        align-content: stretch;
    }

    // Order

    .#{$prefix}order-0 {
        order: 0;
    }

    .#{$prefix}order-1 {
        order: 1;
    }

    .#{$prefix}order-2 {
        order: 2;
    }

    .#{$prefix}order-3 {
        order: 3;
    }

    .#{$prefix}order-4 {
        order: 4;
    }

    .#{$prefix}order-5 {
        order: 5;
    }

    .#{$prefix}order-6 {
        order: 6;
    }

    .#{$prefix}order-7 {
        order: 7;
    }

    .#{$prefix}order-8 {
        order: 8;
    }

    .#{$prefix}order-first {
        order: -99999;
    }

    .#{$prefix}order-last {
        order: 99999;
    }
}
